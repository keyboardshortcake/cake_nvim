# Need the ability to scrollback more than 2000 lines, which seems to be the default I think?
# https://askubuntu.com/questions/1476900/shell-prompt-in-tmux-session-is-much-slower-and-sluggish#:~:text=The%20default%20history-limit%20in,to%20have%20a%20noticeable%20effect.
# https://stackoverflow.com/questions/18760281/how-do-i-increase-the-scrollback-buffer-size-in-tmux
set -g history-limit 10000
set escape-time 300
# display numbers on panes a little bit longer than 1 second when running `ctrl+b q` so I can switch to them with less urgency
set -g display-panes-time 3000
# Bind "Enter" in copy mode to both
# copy and forward to Clipper:
# for linux
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc localhost 8377"
#for mac
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel pbcopy

# Or, if you are running on a platform where nc requires the `-N` switch (eg. Ubuntu):
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -N localhost 8377"

# Or, if you are running Clipper on a UNIX domain socket:
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -U ~/.clipper.sock"

# Or, if your version of netcat doesn't have socket support and you want to use socat:
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "socat - UNIX-CLIENT:~/.clipper.sock"

## # macOS only
set -g mouse on
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M
# bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
# bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
# bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
# bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
# bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

## For the below, reference: https://unix.stackexchange.com/questions/318281/how-to-copy-and-paste-with-a-mouse-with-tmux
## To copy, left click and drag to highlight text in yellow,
## once you release left click yellow text will disappear and will automatically be available in clibboard
## Use vim keybindings in copy mode
setw -g mode-keys vi
## ## # Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -i"
bind -Tcopy-mode-vi C-j               send -X copy-pipe-and-cancel 'xsel -i'
bind -Tcopy-mode-vi Enter             send -X copy-pipe-and-cancel 'xsel -i'
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'xsel -i'
# bind -Tcopy-mode-vi C-j               send -X copy-pipe-and-cancel 'pbcopy'
# bind -Tcopy-mode-vi Enter             send -X copy-pipe-and-cancel 'pbcopy'
# bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'pbcopy'
set -g focus-events on

#show my window name in the title bar please :-/
# set-option -g set-titles on
# set-option -g set-titles-string "#S / #W"
#set inactive/active window styles
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour250,bg=black'
# ## #old styles
# ## #set -g window-style 'fg=default,bg=default'
# ## #set -g window-active-style 'fg=default,bg=default'
# ## 
# ## # set the pane border colors
# ## # sauce: https://stackoverflow.com/questions/25532773/change-background-color-of-active-or-inactive-pane-in-tmux
# set -g pane-border-style 'fg=colour235,bg=colour238'
# set -g pane-active-border-style 'fg=colour51,bg=colour236'
# ## # tmux_conf_copy_to_os_clipboard=true
# ## # trying to get clipboard stuff working
# ## set -s set-clipboard on
# ## # set -s set-clipboard external
# ## # set -as terminal-features ',screen-256color:clipboard' #this one is for tmux 3.2 or later
# ## # set -as terminal-features ',rxvt-unicode-256color:clipboard' #this one is for tmux 3.2 or later
# ## # set -as terminal-overrides ',rxvt-unicode-256color:Ms=\E]52;%p1%s;%p2%s\007' # this one is for older versions of tmux
# ## # set -as terminal-overrides ',xterm-256color:Ms=\E]52;%p1%s;%p2%s\007' # this one is for older versions of tmux
# ## # set -as terminal-overrides ',xterm-256color:clipboard' # this one is for older versions of tmux
# ## # set -as terminal-overrides ',rxvt-256color:Ms=\E]52;%p1%s;%p2%s\007' # this one is for older versions of tmux
# ## # set -as terminal-overrides ',rxvt:Ms=\E]52;%p1%s;%p2%s\007' # this one is for older versions of tmux
# ## # set -as terminal-overrides ',xterm-256color:Ms=\E]52;%p1%s;%p2%s\007' # this one is for older versions of tmux
# ## # set -as terminal-overrides ',screen-256color:Ms=\E]52;%p1%s;%p2%s\007' # this one is for older versions of tmux
# ## # set -g default-terminal "xterm-256color"
# ## # set -g default-terminal "rxvt-unicode-256color"
# ## # set -g default-terminal "rxvt-256color"
# ## # set -as default-terminal ',xterm-256color:Ms=\E]52;%p1%s;%p2%s\007'
# ## # set -g default-terminal "rxvt-unicode-256color"
# ## # set -g default-terminal ',screen-256color:Ms=\E]52;%p1%s;%p2%s\007'
# ## # set -as terminal-overrides ',xterm:Ms=\E]52;%p1%s;%p2%s\007' # this one is for older versions of tmux
# ## # bind -tvi-copy C-j               copy-pipe 'xsel -i'
# ## # bind -tvi-copy Enter             copy-pipe 'xsel -i'
# ## # bind -tvi-copy MouseDragEnd1Pane copy-pipe 'xsel -i'
# This lets me use Ctrl+t for remote tmux and continue to use Ctrl+b for local
bind-key -n C-t send-prefix
bind '%' split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes verticall
bind c new-window -c '#{pane_current_path}' 

## ## Create new window
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l
# set -g focus-events on

# Vim-style of moving between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R # prefix + l selects right pane

# ## ## bind \ select-pane -l # not sure if this is the same as last-window, seems to do the same thing
bind-key "\\" last-window
# bind \ select-window -l # not sure if this is the same as last-window, seems to do the same thing

# Vim-style toggle window/Users/goodtime/Library/Application\ Support/CleanShot/media/media_Wg8Vex9PT9/rwM12pUt.png 
# bind \ last-window

# # List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'tmux-plugins/tmux-cpu'

# # Other examples:
# # set -g @plugin 'github_username/plugin_name'
# # set -g @plugin 'github_username/plugin_name#branch'
# # set -g @plugin 'git@github.com:user/plugin'
# # set -g @plugin 'git@bitbucket.com:user/plugin'

# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'

#set -g default-terminal "xterm-256color"
set -g default-terminal "term-256color"
# make colors inside tmux look the same as outside of tmux
# see https://github.com/tmux/tmux/issues/696
# see https://stackoverflow.com/a/41786092
set-option -ga terminal-overrides ",xterm-256color:Tc"

set -g status-bg black
set -g status-fg colour238
set-window-option -g window-status-current-style fg=green # fg=bg1
# # set -g status-style bg=default
# Default statusbar color
# set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1
# set-option -g status-style bg=colour237,fg=colour51 # bg=bg1, fg=fg1

# Default window title colors
# set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# Default window with an activity alert
# set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# Active window title colors
# set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# Set active pane border color
# set-option -g pane-active-border-style fg=colour214

# Set inactive pane border color
# set-option -g pane-border-style fg=colour239
# source "/usr/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf"

